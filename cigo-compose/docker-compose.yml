version: '3'
services:
    zookeeper:
        image: sparsitytechnologies/cigo-zookeeper:latest
        #network_mode: "host"
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 32181
            ZOOKEEPER_TICK_TIME: 2000
    kafka:
        image: sparsitytechnologies/cigo-kafka:latest
        #network_mode: "host"
        container_name: kafka
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper

    schema-registry:
        image: sparsitytechnologies/cigo-schema-registry:latest
        #network_mode: "host"
        container_name:  schema-registry
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
        depends_on:
            - zookeeper
            - kafka
    kafka-connect:
        image: sparsitytechnologies/cigo-kafka-connect:latest
        container_name: kafka-connect
        ports:
            - "28083:28083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: kafka:29092                 
            CONNECT_REST_PORT: 28083
            CONNECT_GROUP_ID: "cigo" 
            CONNECT_CONFIG_STORAGE_TOPIC: "cigo-config"
            CONNECT_OFFSET_STORAGE_TOPIC: "cigo-offsets"
            CONNECT_STATUS_STORAGE_TOPIC: "cigo-status" 
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
            CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
            CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG,stdout, ERROR, INFO
            CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
            CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
        depends_on:
            - zookeeper
            - kafka
            - schema-registry
            
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
              #        network_mode: "host"
        container_name: elasticsearch
        environment:
          - xpack.security.enabled=false
          - xpack.monitoring.enabled=false
          - xpack.ml.enabled=false
          - xpack.graph.enabled=false
          - xpack.watcher.enabled=false
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - ES_JAVA_OPTS=-Xms512m -Xmx512m
          - discovery.zen.minimum_master_nodes=1
          - discovery.type=single-node
        ulimits:
          memlock:
            soft: -1
            hard: -1
          nofile:
            soft: 65536
            hard: 65536
        restart: always
        ports:
         - "9200:9200"
           
    kibana:
        image: docker.elastic.co/kibana/kibana:5.6.3
        container_name: kibana
        depends_on:
            - elasticsearch
        ports:
            - "5601:5601"




