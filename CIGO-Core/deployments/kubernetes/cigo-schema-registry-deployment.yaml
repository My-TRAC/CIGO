apiVersion: v1
kind: Service
metadata:
  name: cigo-schema-registry
  labels:
    name: cigo-schema-registry
spec:
  ports:
  - name: "listener"
    port: 8081
    targetPort: 8081
  clusterIP: None
  selector:
    name: cigo-schema-registry
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cigo-schema-registry
spec:
  replicas: 3
  strategy: {}
  template:
    metadata:
      labels:
        name: cigo-schema-registry
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: 127.0.0.1:3306
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: cigo-schema-registry 
        - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
          value: cigo-zookeeper.default.svc.cluster.local:32181
        - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
          value: PLAINTEXT
        - name: SCHEMA_REGISTRY_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: SCHEMA_REGISTRY_LISTENERS
          value: http://cigo-schema-registry.default.svc.cluster.local:8081
        image: sparsitytechnologies/cigo-schema-registry:0.1
        name: schema-registry
        ports:
        - containerPort: 8081
        resources: {}

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=buoyant-episode-216912:europe-west1:mysql-share=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true

      volumes:
          - name: cloudsql-instance-credentials
            secret:
              secretName: cloudsql-instance-credentials
      restartPolicy: Always
status: {}
